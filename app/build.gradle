apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '24.0.3'
    defaultConfig {
        applicationId "com.coderstory.Purify"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 90
        versionName "1.5.0"
        resConfigs "cn"
    }
    repositories {
        mavenCentral()
    }

    signingConfigs {//签名的配置
        release {
            storeFile file("mykey.jks")
            storePassword 'zzj8868014'
            keyAlias 'coolapk'
            keyPassword 'bbs8868014'
        }
    }


    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                if (variant.buildType.name.equals('release')) {  //如果是release版本
                    variant.outputs.each { output -> def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {  //查找所有的apk
                            def fileName = "MIUI Purify_${releaseTime()}_${defaultConfig.versionName}.apk"  //重新定义apk的名称
                            output.outputFile = new File(outputFile.parent, fileName)  //outputFile.parent参数可以改成你你想要的发布路径
                        }
                    }
                }
            }
        }



    }
    productFlavors {
    }
     lintOptions {
        abortOnError false
    }


}

dependencies {
    provided fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':library')
    compile project(':pull')
    compile 'com.android.support:support-v4:25.0.1'
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.android.support:design:25.0.1'
    testCompile 'junit:junit:4.12'
    provided 'de.robv.android.xposed:api:82'
}

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC")) //年月日
    //return new Date().format("yyyyMMdd HH:mm:ss", TimeZone.getTimeZone("Asia/shanghai")) //年月日时分秒
}

